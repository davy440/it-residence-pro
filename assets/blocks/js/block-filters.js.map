{"version":3,"file":"./block-filters.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNuE;AAC3B;AACA;AAE5C,MAAMI,WAAW,GAAGA,CAAA,KAAMC,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,aAAa,CAAC,CAACC,kBAAkB,CAAC,CAAC;AAC5E,IAAIC,QAAQ,GAAG,IAAI;AAEnBN,2DAAQ,CAAC,MAAM;EACX,IAAIO,YAAY,GAAG,KAAK;EACxB,MAAMC,WAAW,GAAGT,0DAAS,CAAC,MAAM;IAEhC;IACA,MAAMU,WAAW,GAAGR,WAAW,CAAC,CAAC;IACjC,IAAIQ,WAAW,KAAKH,QAAQ,EAAE;MAC1BE,WAAW,CAAC,CAAC;MACbF,QAAQ,GAAGG,WAAW;MACtBZ,gEAAa,CAAC,CAAC,CAACa,OAAO,CAAC,MAAM;QAC1B,IAAIJ,QAAQ,KAAK,UAAU,IAAIC,YAAY,KAAK,KAAK,EAAE;UACnDA,YAAY,GAAG,IAAI;UACnBT,sEAAmB,CAAC,wBAAwB,CAAC;QACjD;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;AACN,CAAC,CAAC,C","sources":["webpack://underscores/external window [\"wp\",\"blocks\"]","webpack://underscores/external window [\"wp\",\"data\"]","webpack://underscores/external window [\"wp\",\"domReady\"]","webpack://underscores/webpack/bootstrap","webpack://underscores/webpack/runtime/compat get default export","webpack://underscores/webpack/runtime/define property getters","webpack://underscores/webpack/runtime/hasOwnProperty shorthand","webpack://underscores/webpack/runtime/make namespace object","webpack://underscores/./assets/blocks/jsx/block-filters.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"domReady\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getBlockTypes, unregisterBlockType } from '@wordpress/blocks';\nimport { subscribe } from '@wordpress/data';\nimport domReady from '@wordpress/dom-ready';\n\nconst getPostType = () => wp.data.select('core/editor').getCurrentPostType();\nlet postType = null;\n\ndomReady(() => {\n    let unregistered = false;\n    const unsubscribe = subscribe(() => {\n\n        // Disable Walk Score if not \"property\" post type\n        const newPostType = getPostType();\n        if (newPostType !== postType) {\n            unsubscribe();\n            postType = newPostType;\n            getBlockTypes().forEach(() => {\n                if (postType !== 'property' && unregistered === false) {\n                    unregistered = true;\n                    unregisterBlockType('it-listings/walk-score');\n                }\n            });\n        }\n    });\n});"],"names":["getBlockTypes","unregisterBlockType","subscribe","domReady","getPostType","wp","data","select","getCurrentPostType","postType","unregistered","unsubscribe","newPostType","forEach"],"sourceRoot":""}